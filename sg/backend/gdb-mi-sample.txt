c:\Users\sgraham\code\seaborgium\test_data>gdb-python27.exe --interpreter=mi2
=thread-group-added,id="i1"
~"GNU gdb (GDB) 7.5\n"
~"Copyright (C) 2012 Free Software Foundation, Inc.\n"
~"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\n"
~"This GDB was configured as \"i686-pc-mingw32\".\nFor bug reporting instructions, please see:\n"
~"<http://www.gnu.org/software/gdb/bugs/>.\n"
(gdb)
-file-exec-and-symbols test_binary_mingw.exe
^done
(gdb)
-start
^error,msg="Undefined MI command: start"
(gdb)
-symbol-list-lines test_binary.cc
^done,lines=[{pc="0x0040138c",line="9"},{pc="0x00401395",line="9"},{pc="0x0040139a",line="10"},{pc="0x004013a6",line="11"},{pc="0x004013b9",line="12"},{pc="0x004013c3",line="13"},{pc="0x004013e7",line="12"},{pc="0x004013f9",line="15"},{pc="0x004013fb",line="0"}]
(gdb)


set disassembly-flavor intel
^done,asm_insns=[{address="0x004013cb",func-name="main(int, char**)",offset="63",inst="mov    DWORD PTR [esp+0x1c],0x0"},{address="0x004013d3",func-name="main(int, char**)",offset="71",inst="jmp    0x4013fd <main(int, char**)+113>"},{address="0x004013d5",func-name="main(int, char**)",offset="73",inst="mov    eax,DWORD PTR [esp+0x1c]"},{address="0x004013d9",func-name="main(int, char**)",offset="77",inst="shl    eax,0x2"},{address="0x004013dc",func-name="main(int, char**)",offset="80",inst="add    eax,DWORD PTR [ebp+0xc]"}]


async mode doesn't seem to work on windows, maybe only on remote targets?


-file-exec-and-symbols test_binary_mingw.exe
-exec-arguments 3 5 1vfdas
-break-insert -t main
-exec-run

-exec-next
-exec-step
-exec-finish -- I think this one sucks.
-exec-until

-gdb-set disassembly-flavor intel
-data-disassemble -s $pc -e "$pc + 20" -- 0


-thread-info
^done,threads=[{id="1",target-id="Thread 11652.0x2c",frame={level="0",addr="0x004013a3",func="Function",args=[],file="test_binary.cc",line="15"},state="stopped"}],current-thread-id="1"
(gdb)
s
&"s\n"
^running
*running,thread-id="all"
(gdb)
~"SubFunction (input=44) at test_binary.cc:11\n"
~"11\tin test_binary.cc\n"
*stopped,frame={addr="0x0040138f",func="SubFunction",args=[{name="input",value="44"}],file="test_binary.cc",line="11"},thread-id="1",stopped-threads="all"
(gdb)
-thread-inf
^error,msg="Undefined MI command: thread-inf"
(gdb)
-thread-info
^done,threads=[{id="1",target-id="Thread 11652.0x2c",frame={level="0",addr="0x0040138f",func="SubFunction",args=[{name="input",value="44"}],file="test_binary.cc",line="11"},state="stopped"}],current-thread-id="1"
(gdb)
n
&"n\n"
^running
*running,thread-id="all"
(gdb)
~"12\tin test_binary.cc\n"
*stopped,frame={addr="0x0040139b",func="SubFunction",args=[{name="input",value="44"}],file="test_binary.cc",line="12"},thread-id="1",stopped-threads="all"
(gdb)
-thread-info
^done,threads=[{id="1",target-id="Thread 11652.0x2c",frame={level="0",addr="0x0040139b",func="SubFunction",args=[{name="input",value="44"}],file="test_binary.cc",line="12"},state="stopped"}],current-thread-id="1"
(gdb)
-stack-info-frame
^done,frame={level="0",addr="0x0040139b",func="SubFunction",file="test_binary.cc",line="12"}
(gdb)
-stack-info-depth
^done,depth="3"
(gdb)
-stack-list-arguments
^error,msg="-stack-list-arguments: Usage: PRINT_VALUES [FRAME_LOW FRAME_HIGH]"
(gdb)
-stack-list-arguments 0
^done,stack-args=[frame={level="0",args=[name="input"]},frame={level="1",args=[]},frame={level="2",args=[name="argc",name="argv"]}]
(gdb)
-stack-list-arguments 1
^done,stack-args=[frame={level="0",args=[{name="input",value="44"}]},frame={level="1",args=[]},frame={level="2",args=[{name="argc",value="1"},{name="argv",value="0x352e00"}]}]
(gdb)
-stack-list-arguments 2
^done,stack-args=[frame={level="0",args=[{name="input",type="int",value="44"}]},frame={level="1",args=[]},frame={level="2",args=[{name="argc",type="int",value="1"},{name="argv",type="char **",value="0x352e00"}]}]
(gdb)
-stack-list-frames
^done,stack=[frame={level="0",addr="0x0040139b",func="SubFunction",file="test_binary.cc",line="12"},frame={level="1",addr="0x004013af",func="Function",file="test_binary.cc",line="15"},frame={level="2",addr="0x00401457",func="main",file="test_binary.cc",line="27"}]
(gdb)
-stack-list-locals
^error,msg="-stack-list-locals: Usage: PRINT_VALUES"
(gdb)
-stack-list-locals 1
^done,locals=[]
(gdb)


STACK ARGS AND VALUES

(gdb)
-stack-list-frames
^done,stack=[frame={level="0",addr="0x004013a3",func="Function",file="test_binary.cc",line="15"},frame={level="1",addr="0x00401457",func="main",file="test_binary.cc",line="27"}]
(gdb)
-stack-list-arguments --simple-values
^done,stack-args=[frame={level="0",args=[]},frame={level="1",args=[{name="argc",type="int",value="1"},{name="argv",type="char **",value="0x3b2c80"}]}]
(gdb)
q


-stack-list-variables --simple-values
^done,variables=[{name="f",type="double",value="42.432000000000002"},{name="result",type="int",value="440"},{name="argc",arg="1",type="int",value="1"},{name="argv",arg="1",type="char **",value="0x22e30"}]
(gdb)



(gdb)
This is the test binary!
~"21\t  printf(\"argc: %d\\n\", argc);\n"
*stopped,frame={addr="0x004013dc",func="main",args=[{name="argc",value="1"},{name="argv",value="0x5c1938"}],file="test_binary.cc",fullname="c:\\Users\\sgraham\\code\\seaborgium\\test_data\\test_binary.cc",line="21"},thread-id="1",stopped-threads="all"
(gdb)
-var-create - @ argv
^done,name="var1",numchild="1",value="0x5c1938",type="char **",thread-id="1",has_more="0"
(gdb)
-var-info-num-children var1
^done,numchild="1"
(gdb)
-var-list-children var1
^done,numchild="1",children=[child={name="var1.*argv",exp="*argv",numchild="1",type="char *",thread-id="1"}],has_more="0"
(gdb)
-var-list-children var1*.argv
^error,msg="Variable object not found"
(gdb)
-enable-pretty-printing
^done
(gdb)
-var-info-num-children var1
^done,numchild="1"
(gdb)
-var-list-children var1
^done,numchild="1",children=[child={name="var1.*argv",exp="*argv",numchild="1",type="char *",thread-id="1"}],has_more="0"
(gdb)
-var-list-children --all-values var1
^done,numchild="1",children=[child={name="var1.*argv",exp="*argv",numchild="1",value="0x5c17f9 \"c:\\\\Users\\\\sgraham\\\\code\\\\seaborgium\\\\test_data\\\\test_binary_mingw.exe\"",type="char *",thread-id="1"}],has_more="0"
(gdb)
-var-list-children --all-values var1.*argv
^done,numchild="1",children=[child={name="var1.*argv.**argv",exp="**argv",numchild="0",value="99 'c'",type="char",thread-id="1"}],has_more="0"
(gdb)
-var-list-children --all-values var1.*argv.**argv
^done,numchild="0",has_more="0"

